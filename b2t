#!/usr/bin/perl -l

use strict;
use warnings;

my $structName = shift;
my $headerFile = shift;
my @headerFiles = @ARGV;


print "structName = $structName, headerFile = $headerFile, headerFiles = @headerFiles";

use Convert::Binary::C;
use Data::Dumper;
  
#---------------------
# Create a new object
#---------------------
my $c = new Convert::Binary::C ByteOrder => 'BigEndian';

#---------------------------------------------------
# Add include paths and global preprocessor defines
#---------------------------------------------------
$c->Include(@headerFiles) if $#headerFiles >= 0;

#----------------------------------
# Parse the 'time.h' header file
#----------------------------------
$c->parse_file($headerFile);

#---------------------------------------
# See which files the object depends on
#---------------------------------------
print Dumper([$c->dependencies]);

#-----------------------------------------------------------
# See if struct timespec is defined and dump its definition
#-----------------------------------------------------------
if ($c->def($structName)) {
   print Dumper($c->struct($structName));
}

#-------------------------------
# Read one struct at a time
#-------------------------------

while (($n = read FILE, $bindata, $c->sizeof($structName)) != 0) {
  print "$n bytes read\n";
  my $perl = $c->unpack($structName, $bindata);
  print Dumper($perl);
}	

__END__
exit 0;



require File::Temp;
use File::Temp ();
$dir = File::Temp->newdir();

my $cpp = <<'END';
#include <iostream>
$headerFiles

int main ( int argc, char *argv[] ) {
      
Dear $name,

this is a message I plan to send to you.

regards
  the Perl Maven
END

open(my $fh, '>', $filename) or die "Could not open file '$filename' $!";
print $fh "My first report generated by perl\n";
close $fh;


use File::Temp qw/ :seekable /;
$fh = File::Temp->new();
$fname = $fh->filename;
$fh = File::Temp->new(TEMPLATE => $template);
$fname = $fh->filename;
$tmp = File::Temp->new( UNLINK => 0, SUFFIX => '.dat' );
print $tmp "Some data\n";
print "Filename is $tmp\n";
$tmp->seek( 0, SEEK_END );

